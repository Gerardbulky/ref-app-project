{"ast":null,"code":"export async function analyzeText(s) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      try {\n        const words = s.split(/\\s+/);\n        const wordCounts = words.map(w => w.length);\n        const numLetters = wordCounts.reduce((acc, count) => acc + count, 0);\n        resolve({\n          numWords: words.length,\n          numLetters\n        });\n      } catch (err) {\n        reject(err);\n      }\n    }, 10000);\n  });\n}","map":{"version":3,"sources":["/workspace/ref-app-project/src/analysis.ts"],"names":["analyzeText","s","Promise","resolve","reject","setTimeout","words","split","wordCounts","map","w","length","numLetters","reduce","acc","count","numWords","err"],"mappings":"AAKA,OAAO,eAAeA,WAAf,CAA2BC,CAA3B,EAA4D;AACjE,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAI;AACF,cAAMC,KAAK,GAAGL,CAAC,CAACM,KAAF,CAAQ,KAAR,CAAd;AACA,cAAMC,UAAU,GAAGF,KAAK,CAACG,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACC,MAAnB,CAAnB;AACA,cAAMC,UAAU,GAAGJ,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAxC,EAA+C,CAA/C,CAAnB;AACAZ,QAAAA,OAAO,CAAC;AAAEa,UAAAA,QAAQ,EAAEV,KAAK,CAACK,MAAlB;AAA0BC,UAAAA;AAA1B,SAAD,CAAP;AACD,OALD,CAKE,OAAOK,GAAP,EAAY;AACZb,QAAAA,MAAM,CAACa,GAAD,CAAN;AACD;AACF,KATS,EASP,KATO,CAAV;AAUD,GAXM,CAAP;AAYD","sourcesContent":["export type TextAnalyze = {\n  numWords: number;\n  numLetters: number;\n};\n\nexport async function analyzeText(s: string): Promise<TextAnalyze> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      try {\n        const words = s.split(/\\s+/);\n        const wordCounts = words.map((w) => w.length);\n        const numLetters = wordCounts.reduce((acc, count) => acc + count, 0);\n        resolve({ numWords: words.length, numLetters });\n      } catch (err) {\n        reject(err);\n      }\n    }, 10000);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}
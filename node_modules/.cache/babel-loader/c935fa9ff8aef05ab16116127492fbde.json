{"ast":null,"code":"var _jsxFileName = \"/workspace/ref-app-project/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { analyzeText } from \"./analysis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [analyzeResult, setAnalyzeResult] = React.useState(undefined);\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      const response = await analyzeText(input);\n      setAnalyzeResult(response);\n    } catch (err) {//catch error here\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Text\",\n          variant: \"outlined\",\n          placeholder: \"Search your text here\",\n          multiline: true,\n          rows: 4,\n          onChange: event => setInput(event.target.value),\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        onClick: handleSubmit,\n        loading: loading,\n        variant: \"outlined\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), !loading && analyzeResult && /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflow: \"hidden\",\n          px: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          children: `Your text consists of ${analyzeResult.numWords} words(${analyzeResult.numLetters} letters)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oHDsDB1RKxyeP6HpmJW6TjJrOEk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/ref-app-project/src/App.tsx"],"names":["React","Box","TextField","Paper","LoadingButton","Typography","analyzeText","App","input","setInput","useState","loading","setLoading","analyzeResult","setAnalyzeResult","undefined","handleSubmit","response","err","event","target","value","flexGrow","overflow","px","numWords","numLetters"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,QAAyC,YAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCd,KAAK,CAACU,QAAN,CAExCK,SAFwC,CAA1C;;AAGA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAI;AACFJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,QAAQ,GAAG,MAAMX,WAAW,CAACE,KAAD,CAAlC;AACAM,MAAAA,gBAAgB,CAACG,QAAD,CAAhB;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY,CACZ;AACD,KAND,SAMU;AACRN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,KAAD;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,gBADL;AAEE,UAAA,KAAK,EAAC,MAFR;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,WAAW,EAAC,uBAJd;AAKE,UAAA,SAAS,MALX;AAME,UAAA,IAAI,EAAE,CANR;AAOE,UAAA,QAAQ,EAAGO,KAAD,IACRV,QAAQ,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CARZ;AAUE,UAAA,KAAK,EAAEb;AAVT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEQ,YAAxB;AAAsC,QAAA,OAAO,EAAEL,OAA/C;AAAwD,QAAA,OAAO,EAAC,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAoBG,CAACA,OAAD,IAAYE,aAAZ,iBACC,QAAC,KAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAES,UAAAA,QAAQ,EAAE,CAAZ;AAAeC,UAAAA,QAAQ,EAAE,QAAzB;AAAmCC,UAAAA,EAAE,EAAE;AAAvC,SAAT;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,MAAM,MADR;AAAA,oBAEG,yBAAwBX,aAAa,CAACY,QAAS,UAASZ,aAAa,CAACa,UAAW;AAFpF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAlDQnB,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { analyzeText, TextAnalyze } from \"./analysis\";\n\nfunction App() {\n  const [input, setInput] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [analyzeResult, setAnalyzeResult] = React.useState<\n    TextAnalyze | undefined\n  >(undefined);\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      const response = await analyzeText(input);\n      setAnalyzeResult(response);\n    } catch (err) {\n      //catch error here\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Paper>\n        <Box>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Text\"\n            variant=\"outlined\"\n            placeholder=\"Search your text here\"\n            multiline\n            rows={4}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              setInput(event.target.value)\n            }\n            value={input}\n          />\n        </Box>\n        <LoadingButton onClick={handleSubmit} loading={loading} variant=\"outlined\">\n          Submit\n        </LoadingButton>\n      </Paper>\n      {!loading && analyzeResult && (\n        <Paper>\n          <Box sx={{ flexGrow: 1, overflow: \"hidden\", px: 3 }}>\n            <Typography\n              noWrap\n            >{`Your text consists of ${analyzeResult.numWords} words(${analyzeResult.numLetters} letters)`}</Typography>\n          </Box>\n        </Paper>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}